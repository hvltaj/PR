import java.util.Random;

class Obraz {

	private int size_n;
	private int size_m;
	private char[][] tab;
	private int[] histogram;

	public Obraz(int n, int m) {

		this.size_n = n;
		this.size_m = m;
		tab = new char[n][m];

		final Random random = new Random();

		for (int i = 0; i < n; i++) {
			for (int j = 0; j < m; j++) {
				tab[i][j] = (char) (random.nextInt(94) + 33); // ascii 33-127
				System.out.print(tab[i][j] + " ");
			}
			System.out.print("\n");
		}
		System.out.print("\n\n");

		histogram = new int[94];
		clear_histogram();
	}

	public void clear_histogram() {

		for (int i = 0; i < 94; i++)
			histogram[i] = 0;

	}

	public void calculate_histogram() {

		for (int i = 0; i < size_n; i++) {
			for (int j = 0; j < size_m; j++) {

				for (int k = 0; k < 94; k++) {
					if (tab[i][j] == (char) (k + 33))
						histogram[k]++;
				}

			}
		}

	}

	public void print_histogram() {

		for (int i = 0; i < 94; i++) {
			System.out.print((char) (i + 33) + " " + histogram[i] + "\n");
		}

	}

	class Thread1 extends Thread {
		private char searchChar;
		private char[][] image;
		private int count, threadNumber;

		public Thread1(int thNumber, char s, char[][] tab) {
			searchChar = s;
			image = tab;
			count = 0;

		}

		@Override
		public void run() {
			for (char[] cs : image) {
				for (char c : cs) {
					if (c == searchChar)
						++count;
				}
			}
			String hist = "";
			for (int i = 0; i < count / 10; ++i)
				hist += "=";

			System.out.println("Thread " + (searchChar - 33) + ": "
					+ searchChar + " " + hist);

		}
	}

}
